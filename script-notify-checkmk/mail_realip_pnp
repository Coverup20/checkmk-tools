#!/usr/bin/env python3
# mail_realip_pnp IP OK - GRA KO
# Bulk: yes

import os
import subprocess
import tempfile
from cmk.notification_plugins import mail

def generate_pnp_graph(hostname, service=None):
    """Genera un PNG dal RRD di PNP4Nagios"""
    graph_file = tempfile.NamedTemporaryFile(suffix=".png", delete=False)
    graph_path = graph_file.name
    graph_file.close()

    # Costruisco comando pnp4nagios
    if service:
        cmd = [
            "pnp4nagios", "-m", "graph",
            "-h", hostname,
            "-s", service,
            "-o", graph_path,
        ]
    else:
        cmd = [
            "pnp4nagios", "-m", "graph",
            "-h", hostname,
            "-o", graph_path,
        ]

    try:
        subprocess.run(cmd, check=True)
        return graph_path
    except Exception as e:
        return None

def main():
    # Se esiste la label real_ip, sovrascrivo indirizzo host
    real_ip = os.environ.get("NOTIFY_HOSTLABEL_real_ip")
    if real_ip:
        os.environ["HOSTADDRESS"] = real_ip
        os.environ["NOTIFY_HOSTADDRESS"] = real_ip
        if "NOTIFY_HOSTOUTPUT" in os.environ:
            os.environ["NOTIFY_HOSTOUTPUT"] = os.environ["NOTIFY_HOSTOUTPUT"].replace(
                "127.0.0.1", real_ip
            )

    # Preparo un allegato PNG se PNP4Nagios ha il dato
    hostname = os.environ.get("NOTIFY_HOSTNAME")
    service = os.environ.get("NOTIFY_SERVICEDESC")

    graph = generate_pnp_graph(hostname, service)
    if graph:
        # Checkmk legge ATTACHMENTS come lista separata da :
        os.environ["NOTIFY_ATTACHMENT"] = graph

    # Richiama la notifica mail standard
    mail.main()

if __name__ == "__main__":
    main()


real_ip = os.environ.get("NOTIFY_HOSTLABEL_real_ip")
if real_ip:
    # Non sovrascrivo HOSTADDRESS, lo tengo intatto per i grafici
    os.environ["REAL_IP"] = real_ip
